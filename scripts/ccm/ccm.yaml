apiVersion: v1
kind: ConfigMap
metadata:
  name: ccm-config
  namespace: kube-system
data:
  ccm.properties: |-
    {
      "_comment": "TODO change below to px after initial bringup with Arcus",
      "product_name": "flasharray",
       "logging": {
         "array_info_path": "/var/log/array_info.json"
       },
       "features": {
         "env_info": "file",
         "cert_store": "file",
         "appliance_info": "config",
         "scheduled_log_uploader":"disabled",
         "config_reload": "file",
         "upload": "enabled"
       },
      "cert": {
        "activation": {
              "private": "/dev/null",
              "public": "/dev/null"
        },
        "registration_enabled": "false",
        "appliance": {
          "current_cert_dir": "/etc/pwx/ccm/cert"
        }
      },
     "cloud": {
       "array_loc_file_path": "/etc/pwx/ccm/location"
     },
      "server": {
        "hostname": "0.0.0.0"
      },
      "logupload": {
        "logfile_patterns": [
            "/var/cores/diags.tar.gz",
            "/var/cores/*.log",
            "/var/cores/*.stack",
            "/var/cores/*.heap",
            "/var/cores/.alerts/alerts.log"
        ],
        "skip_patterns": [],
        "additional_files": [],
        "phonehome_sent": "/var/cache/phonehome.sent"
      },
      "xml_rpc": {},
      "standalone": {
        "version": "1.0.0",
        "controller_sn": "SA-0",
        "component_name": "SA-0",
        "product_name": "px",
        "appliance_id_path": "/dev/null"
      },
      "proxy": {
        "path": "/dev/null"
      }
    }
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: ccm
  namespace: kube-system
  labels:
    name: ccm
spec:
  selector:
    matchLabels:
      name: ccm
  minReadySeconds: 0
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  template:
    metadata:
      labels:
        name: ccm
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: ccm/enabled
                    operator: In
                    values:
                      - "true"
                  - key: node-role.kubernetes.io/master
                    operator: DoesNotExist
      hostNetwork: false
      hostPID: false
      containers:
        - name: telemetry
          image: harshpx/ccm-service:2.1.0
          imagePullPolicy: Always
          env:
            - name: "configFile"
              value: "/etc/ccm/ccm.properties"
          livenessProbe:
            httpGet:
              path: /1.0/status
              port: 1970
          readinessProbe:
            periodSeconds: 10
            httpGet:
              path: /1.0/status
              port: 1970
          securityContext:
            privileged: true
          volumeMounts:
            - name: etcpwx
              mountPath: /etc/pwx
            - name: diagsdump
              mountPath: /var/cores
            - name: journalmount1
              mountPath: /var/run/log
              readOnly: true
            - name: varlog
              mountPath: /var/log
            - name: timezone
              mountPath: /etc/timezone
              readOnly: true
            - name: localtime
              mountPath: /etc/localtime
              readOnly: true
            - name: ccm-config
              mountPath: /etc/ccm
      restartPolicy: Always
      serviceAccountName: px-account
      volumes:
        - name: etcpwx
          hostPath:
            path: /etc/pwx
        - name: diagsdump
          hostPath:
            path: /var/cores
        - name: journalmount1
          hostPath:
            path: /var/run/log
        - name: varlog
          hostPath:
            path: /var/log
        - name: localtime
          hostPath:
            path: /etc/localtime
        - name: timezone
          hostPath:
            path: /etc/timezone
        - name: ccm-config
          configMap:
            name: ccm-config
            items:
              - key: ccm.properties
                path: ccm.properties
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: px-account
  namespace: kube-system
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: node-get-put-list-role
rules:
    - apiGroups: [ "" ]
      resources: [ "secrets" ]
      verbs: [ "get", "list" ]
    - apiGroups: [ "" ]
      resources: [ "nodes" ]
      verbs: [ "watch", "get", "update", "list" ]
    - apiGroups: [ "" ]
      resources: [ "pods" ]
      verbs: [ "delete", "get", "list", "watch", "update" ]
    - apiGroups: [ "" ]
      resources: [ "persistentvolumeclaims", "persistentvolumes" ]
      verbs: [ "get", "list" ]
    - apiGroups: [ "storage.k8s.io" ]
      resources: [ "storageclasses" ]
      verbs: [ "get", "list" ]
    - apiGroups: [ "" ]
      resources: [ "configmaps" ]
      verbs: [ "get", "list", "update", "create" ]
    - apiGroups: [ "extensions" ]
      resources: [ "podsecuritypolicies" ]
      resourceNames: [ "privileged" ]
      verbs: [ "use" ]
    - apiGroups: [ "portworx.io" ]
      resources: [ "volumeplacementstrategies" ]
      verbs: [ "get", "list" ]
    - apiGroups: [ "stork.libopenstorage.org" ]
      resources: [ "backuplocations" ]
      verbs: [ "get", "list" ]
    - apiGroups: [ "core.libopenstorage.org" ]
      resources: [ "*" ]
      verbs: [ "*" ]
    - apiGroups: [ "" ]
      resources: [ "events" ]
      verbs: [ "create" ]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: node-role-binding
subjects:
  - kind: ServiceAccount
    name: px-account
    namespace: kube-system
roleRef:
  kind: ClusterRole
  name: node-get-put-list-role
  apiGroup: rbac.authorization.k8s.io