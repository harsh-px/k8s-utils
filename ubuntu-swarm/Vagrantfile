# vi: set ft=ruby :

require 'fileutils'                                                             
require 'tempfile'  

NODE_COUNT    = 1
MASTER_NAME   = "master"                                                 
MINION_PREFIX = "worker-" 
SUBNET        = '192.168.44'

$common_setup = <<SCRIPT
NODE_COUNT=$1                                                                   
SUBNET=$2                                                                       
MASTER_NAME=$3                                                                  
MINION_PREFIX=$4                                                                

sudo apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D
sudo apt-add-repository 'deb https://apt.dockerproject.org/repo ubuntu-xenial main'
sudo apt-get update
apt-get install -y docker-engine vim git

sed -i s/MountFlags=slave//g /lib/systemd/system/docker.service 
sed -i 's/ExecStart=\\\/usr\\\/bin\\\/docker/ExecStart=\\\/usr\\\/bin\\\/docker --insecure-registry 192.168.44.1:5000/g' /lib/systemd/system/docker.service 
systemctl daemon-reload
service docker restart

git clone https://github.com/harsh-px/k8s-utils.git
SCRIPT

$swarm_init = <<SCRIPT
docker swarm init --advertise-addr 192.168.44.10
SCRIPT

$swarm_join = <<SCRIPT
#docker swarm join \
#		       --token SWMTKN-1-3pu6hszjas19xyp7ghgosyx9k8atbfcr8p2is99znpy26u2lkl-1awxwuwd3z9j1z3puu7rcgdbx \
#			       192.168.44.10:2377
SCRIPT

$device_setup = <<SCRIPT
echo "***** Creating loop0 device"
dd if=/dev/zero of=my_fs bs=1M count=2048
losetup /dev/loop0 my_fs
SCRIPT


Vagrant.configure("2") do |config|
    config.vm.box = "ubuntu/xenial64"
    config.vm.boot_timeout = 600

    config.vm.provider "virtualbox" do |v|
      v.memory = 2048
      v.cpus = 2
    end

	config.vm.provision "shell" do |s|
		s.inline = $common_setup 
		s.name = "common_setup"
		s.args = "#{NODE_COUNT} #{SUBNET} #{MASTER_NAME} #{MINION_PREFIX}"
		s.privileged = true
	end

    config.vm.define "master" do |node|
      node.vm.hostname = "master"
      node.vm.network :private_network, ip: "#{SUBNET}.10"
      node.vm.provision :shell, inline: "sed 's/127\.0\.0\.1.*master.*/192\.168\.44\.10 master/' -i /etc/hosts"

      node.vm.provision "shell" do |s| 
	  	s.inline = $swarm_init                                            
		s.name = "swarm_init"
		s.privileged = true                                                 
	  end 
	end

	config.vm.define "worker-1" do |subconfig|
		subconfig.vm.hostname = "worker-1"
		subconfig.vm.network :private_network, ip: "#{SUBNET}.11"
		subconfig.vm.provision :shell, inline: "sed 's/127\.0\.0\.1.*worker-1.*/192\.168\.44\.11 worker-1/' -i /etc/hosts"

  		subconfig.vm.provision "shell" do |s4|                                   
  			s4.inline = $device_setup                                            
			s4.name = "loop0_dev"
			s4.privileged = true                                                 
  		end 

  		subconfig.vm.provision "shell" do |s5|                                   
  			s5.inline = $swarm_join                                            
			s5.name = "swarm_join"
			s5.privileged = true                                                 
  		end 
	end


	config.vm.define "worker-2" do |subconfig|
		subconfig.vm.hostname = "worker-2"
		subconfig.vm.network :private_network, ip: "#{SUBNET}.12"
		subconfig.vm.provision :shell, inline: "sed 's/127\.0\.0\.1.*worker-2.*/192\.168\.44\.12 worker-2/' -i /etc/hosts"

  		subconfig.vm.provision "shell" do |s4|                                   
  			s4.inline = $device_setup                                            
			s4.name = "loop0_dev"
			s4.privileged = true                                                 
  		end 

  		subconfig.vm.provision "shell" do |s5|                                   
  			s5.inline = $swarm_join                                            
			s5.name = "swarm_join"
			s5.privileged = true                                                 
  		end 
	end


	config.vm.define "worker-3" do |subconfig|
		subconfig.vm.hostname = "worker-3"
		subconfig.vm.network :private_network, ip: "#{SUBNET}.13"
		subconfig.vm.provision :shell, inline: "sed 's/127\.0\.0\.1.*worker-3.*/192\.168\.44\.13 worker-3/' -i /etc/hosts"

  		subconfig.vm.provision "shell" do |s4|                                   
  			s4.inline = $device_setup                                            
			s4.name = "loop0_dev"
			s4.privileged = true                                                 
  		end 

  		subconfig.vm.provision "shell" do |s5|                                   
  			s5.inline = $swarm_join                                            
			s5.name = "swarm_join"
			s5.privileged = true                                                 
  		end 
	end

 
	#(1..NODE_COUNT).each do |i|  
	#	config.vm.define "#{MINION_PREFIX}#{i}" do |subconfig|
	#		subconfig.vm.hostname = "#{MINION_PREFIX}#{i}"
	#		subconfig.vm.network :private_network, ip: "#{SUBNET}.#{i + 10}"
	#		subconfig.vm.provision :shell, inline: "sed 's/127\.0\.0\.1.*worker-1.*/192\.168\.44\.20 worker-1/' -i /etc/hosts"
    #
    # 		subconfig.vm.provision "shell" do |s4|                                   
	#  			s4.inline = $device_setup                                            
	#			s4.name = "loop0_dev"
	#			s4.privileged = true                                                 
	# 		end 

    #  		subconfig.vm.provision "shell" do |s5|                                   
	#  			s5.inline = $swarm_join                                            
	#			s5.name = "swarm_join"
	#			s5.privileged = true                                                 
	#  		end 
	#	end
	#end
end
